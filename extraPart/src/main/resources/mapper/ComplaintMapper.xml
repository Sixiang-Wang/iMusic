<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.java.imusic.dao.ComplaintMapper">
    <resultMap id="BaseResultMap" type="com.java.imusic.domain.Complaint" >
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="song_id" jdbcType="INTEGER" property="songId"/>
        <result column="song_list_id" jdbcType="INTEGER" property="songListId"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="appeal" jdbcType="VARCHAR" property="appeal"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,user_id,type,song_id,song_list_id,content,create_time,appeal
    </sql>

    <insert id="insert" parameterType="com.java.imusic.domain.Complaint">
        insert into complaint
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="songId != null">
                song_id,
            </if>
            <if test="songListId != null">
                song_list_id,
            </if>
            <if test="content != null">
                content,
            </if>
            create_time,
            <if test="appeal != null">
                appeal,
            </if>
        </trim>
        <trim prefix=" values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="userId != null">
                #{userId},
            </if>
            <if test="type != null">
                #{type},
            </if>
            <if test="songId != null">
                #{songId},
            </if>
            <if test="songListId != null">
                #{songListId},
            </if>
            <if test="content != null">
                #{content},
            </if>
            now(),
            <if test="appeal != null">
                #{appeal},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.java.imusic.domain.Complaint">
        update complaint
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="songId != null">
                song_id = #{songId},
            </if>
            <if test="songListId != null">
                song_list_id = #{songListId},
            </if>
            <if test="content != null">
                content = #{content},
            </if>
            <if test="appeal != null">
                appeal = #{appeal},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Integer">
        delete from complaint
        where id=#{id}
    </delete>

    <delete id="deleteBySongId" parameterType="java.lang.Integer">
        delete from complaint
        where song_id=#{songId}
    </delete>

    <delete id="deleteBySongListId" parameterType="java.lang.Integer">
        delete from complaint
        where song_list_id=#{songListId}
    </delete>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from complaint
        where id=#{id}
    </select>

    <select id="allComplaint" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from complaint
    </select>

</mapper>
















