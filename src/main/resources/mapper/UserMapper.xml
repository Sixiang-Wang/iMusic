<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.java.imusic.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.java.imusic.domain.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="sex" jdbcType="TINYINT" property="sex"/>
        <result column="phone_num" jdbcType="CHAR" property="phoneNum"/>
        <result column="email" jdbcType="CHAR" property="email"/>
        <result column="birth" jdbcType="TIMESTAMP" property="birth"/>
        <result column="introduction" jdbcType="VARCHAR"
                property="introduction"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
        <result column="profilePicture" jdbcType="VARCHAR" property="profilePicture"/>
        <result column="create_time" jdbcType="TIMESTAMP"
                property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP"
                property="updateTime"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="singer_id" jdbcType="INTEGER" property="singerId"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,username,password,sex,phone_num,email,birth,introduction,location,profilePicture,create_time,update_time,name,singer_id
    </sql>

    <insert id="insert" parameterType="com.java.imusic.domain.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="phoneNum != null">
                phone_num,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="birth != null">
                birth,
            </if>
            <if test="introduction != null">
                introduction,
            </if>
            <if test="location != null">
                location,
            </if>
            <if test="profilePicture != null">
                profilePicture,
            </if>
            create_time,update_time,
            <if test="name != null">
                name,
            </if>
            <if test="singerId != null">
                singer_id,
            </if>
        </trim>
        <trim prefix=" values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="username != null">
                #{username},
            </if>
            <if test="password != null">
                #{password},
            </if>
            <if test="sex != null">
                #{sex},
            </if>
            <if test="phoneNum != null">
                #{phoneNum},
            </if>
            <if test="email != null">
                #{email},
            </if>
            <if test="birth != null">
                #{birth},
            </if>
            <if test="introduction != null">
                #{introduction},
            </if>
            <if test="location != null">
                #{location},
            </if>
            <if test="profilePicture != null">
                #{profilePicture},
            </if>
            now(),now(),
            <if test="name != null">
                #{name},
            </if>
            <if test="singerId != null">
                #{singerId},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.java.imusic.domain.User">
        update user
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="phoneNum != null">
                phone_num = #{phoneNum},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            birth = #{birth},
            <if test="introduction != null">
                introduction = #{introduction},
            </if>
            <if test="location != null">
                location = #{location},
            </if>
            <if test="profilePicture != null">
                profilePicture = #{profilePicture},
            </if>
            update_time = now(),
            <if test="name != null">
                name = #{name},
            </if>
            <if test="singerId != null">
                singer_id = #{singerId},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Integer">
        delete
        from user
        where id = #{id}
    </delete>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where id=#{id}
    </select>

    <select id="allUser" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
    </select>

    <select id="verifyPassword" resultType="java.lang.Integer"
            parameterType="java.util.HashMap">
        select count(*)
        from user
        where username = #{username}
          and password = #{password}
    </select>

    <select id="getByUsername" resultMap="BaseResultMap"
            parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{username}
    </select>
    <select id="getUserWithAccount"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where username=#{username} And password=#{password}
    </select>

    <select id="getUserWithPhoneNum"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where phone_num=#{phoneNum}
    </select>

    <select id="getUserWithName"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where name=#{name}
        limit 1
    </select>

    <select id="lastUserID" resultType="java.lang.Integer">
        select max(id)
        from user
    </select>

    <select id="getUserWithID"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id=#{id}
        limit 1
    </select>

</mapper>





